version: "3.8"
services:
  db:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_DB: myapp
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network

  backend:
    build: ./backend
    restart: always
    ports:
      - "3000:3000" # Backend API on host port 3000
    environment:
      - DB_HOST=db
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=myapp
      - DB_PORT=5432
    depends_on:
      - db
    networks:
      - app-network

  # Production Frontend Service
  frontend-prod:
    build:
      context: ./booklist
      dockerfile: Dockerfile
    restart: always
    ports:
      - "8080:80" # Host port 8080 mapped to container port 80 (Nginx)
    depends_on:
      - backend
    networks:
      - app-network

  # Development Frontend Service
  frontend-dev:
    build:
      context: ./booklist
      dockerfile: Dockerfile.dev
    restart: always
    ports:
      - "5173:5173"
    volumes:
      - ./booklist:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://localhost:3000

    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0
    networks:
      - app-network
volumes:
  db-data:

networks:
  app-network:
    driver: bridge
